service: toggl-2-toggl
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x

  stage: ${opt:stage}
  region: ${file(./serverless/variables/${self:provider.stage}.yml):REGION}

  apiKeys:
    - ${self:service}-${self:provider.stage}-apiKey

  iamRoleStatements: ${file(./serverless/iam-roles.yml)}

  environment:
    API_VERSION: ${file(./package.json):version}
    APP_NAME: ${self:service}
    APP_STAGE: ${self:provider.stage}
    TELEGRAM_API_TOKEN: ${file(./serverless/variables/${self:provider.stage}.yml):TELEGRAM.API_TOKEN}
    TOGGL_API_TOKEN_FROM: ${file(./serverless/variables/${self:provider.stage}.yml):TOGGL.FROM.API_TOKEN}
    TOGGL_THESIS_PROJECT_ID_FROM: ${file(./serverless/variables/${self:provider.stage}.yml):TOGGL.FROM.THESIS_PROJECT_ID}
    TOGGL_API_TOKEN_TO: ${file(./serverless/variables/${self:provider.stage}.yml):TOGGL.TO.API_TOKEN}
    TOGGL_THESIS_PROJECT_ID_TO: ${file(./serverless/variables/${self:provider.stage}.yml):TOGGL.TO.THESIS_PROJECT_ID}
    TOGGL_WORK_PROJECT_ID_TO: ${file(./serverless/variables/${self:provider.stage}.yml):TOGGL.TO.WORK_PROJECT_ID}

  stackTags:
    CostCentre: patrikmarin-apps
    Environment: ${self:provider.stage}
  tags:
    CostCentre: patrikmarin-apps
    Environment: ${self:provider.stage}

functions:
  - ${file(./serverless/functions.yml)}

resources:
  - ${file(./serverless/resources/combined.yml)}

custom:
  timeEntriesTableName: ${self:service}-${self:provider.stage}-TimeEntries
  serverless-offline:
    region: eu-central-1
    port: "3000"
    noAuth: true
  dynamodb:
    stages:
      - offline
    start:
      host: localhost
      port: "8000"
      migrate: true
      dbPath: dynamodb/
      sharedDb: true
      seed: true
      inMemory: true
      convertEmptyValues: true
      noStart: true
    seed:
      test:
        sources:
          - table: ${self:custom.timeEntriesTableName}
            sources: [./test/tasks.json]
  webpack:
    webpackConfig: "webpack.config.js" # Name of webpack configuration file
    packager: "npm" # Packager that will be used to package your external modules
    excludeFiles: test/**/*.js # Provide a glob for files to ignore
    includeModules:
      forceExclude:
        - aws-sdk

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
